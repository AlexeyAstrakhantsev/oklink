import asyncio
from playwright.async_api import async_playwright

async def scrape_tooltips(url, attempts=1):
    results = set()

    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)  # headless=True –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –æ–∫–Ω–æ
        page = await browser.new_page()

        for i in range(attempts):
            print(f"\nüîÅ –ü–æ–ø—ã—Ç–∫–∞ {i + 1} –∏–∑ {attempts}")
            await page.goto(url)
            await page.wait_for_selector('.index_innerClassName__6ivtc')

            address_elements = await page.query_selector_all('.index_innerClassName__6ivtc')
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(address_elements)} –∞–¥—Ä–µ—Å–æ–≤")

            for el in address_elements:
                try:
                    await el.hover()
                    await page.wait_for_timeout(500)  # –ü–æ–¥–æ–∂–¥–∞—Ç—å, –ø–æ–∫–∞ tooltip –ø–æ—è–≤–∏—Ç—Å—è

                    tooltip = await page.query_selector('.okui-tooltip')
                    if tooltip:
                        text = await tooltip.inner_text()
                        if text not in results:
                            results.add(text)
                            print(f"üü° Tooltip:\n{text}\n{'-'*50}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

        await browser.close()

    print(f"\n‚úÖ –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö tooltip'–æ–≤: {len(results)}")

# –ó–∞–ø—É—Å—Ç–∏—Ç—å
if __name__ == "__main__":
    asyncio.run(scrape_tooltips("https://www.oklink.com/ethereum/tx-list", attempts=1))
